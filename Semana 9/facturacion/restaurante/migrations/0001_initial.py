# Generated by Django 3.1.7 on 2021-03-24 02:52

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MesaModel',
            fields=[
                ('mesaId', models.AutoField(db_column='mesa_id', primary_key=True, serialize=False)),
                ('mesaNumero', models.CharField(db_column='mesa_numero', max_length=10, verbose_name='Numero de la mesa')),
                ('mesaCapacidad', models.IntegerField(db_column='mesa_capacidad', verbose_name='Capacidad de la mesa')),
                ('mesaEstado', models.BooleanField(db_column='mesa_estado', default=True, verbose_name='Estado de la mesa')),
            ],
            options={
                'verbose_name': 'Mesa',
                'db_table': 't_mesa',
            },
        ),
        migrations.CreateModel(
            name='PlatoModel',
            fields=[
                ('platoId', models.AutoField(db_column='plato_id', primary_key=True, serialize=False)),
                ('platoDescripcion', models.CharField(db_column='plato_descripcion', max_length=50, verbose_name='Nombre del plato')),
                ('platoCantidad', models.IntegerField(db_column='plato_cantidad', verbose_name='Cantidad de los platos')),
                ('platoFoto', models.ImageField(db_column='plato_foto', upload_to='', verbose_name='Foto del plato')),
                ('platoPrecio', models.DecimalField(db_column='plato_precio', decimal_places=2, max_digits=5, verbose_name='Precio del plato')),
            ],
            options={
                'verbose_name': 'Plato',
                'db_table': 't_plato',
            },
        ),
        migrations.CreateModel(
            name='PersonalModel',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('personalId', models.AutoField(db_column='personal_id', primary_key=True, serialize=False, unique=True)),
                ('personalCorreo', models.EmailField(db_column='personal_correo', max_length=30, unique=True, verbose_name='Correo del personal')),
                ('personalTipo', models.IntegerField(choices=[(1, 'ADMINISTRADOR'), (2, 'CAJERO'), (3, 'MOZO')], db_column='personal_tipo', verbose_name='Tipo del personal')),
                ('personalNombre', models.CharField(db_column='personal_nombre', max_length=45, verbose_name='Nombre del personal')),
                ('personalApellido', models.CharField(db_column='personal_apellido', max_length=45, verbose_name='Apellido del personal')),
                ('password', models.TextField(db_column='personal_password', verbose_name='Contrase√±a del personal')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'personal',
                'verbose_name_plural': 'personales',
                'db_table': 't_personal',
            },
        ),
    ]
